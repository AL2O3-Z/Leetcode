//set
class Solution {
public:
       string destCity(vector<vector<string>>& paths) {
           unordered_set<string>src;
           for(int i=0;i<paths.size();i++)
           {
               src.insert(paths[i][0]);//insert sources
           }
           for(int i=0;i<paths.size();i++)
           {
               if(find(src.begin(),src.end(),paths[i][1])==src.end())//check if destinationis not a source
                   return paths[i][1];
           }
           return "done";
        }
};
//map
class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        unordered_map<string, string> map;
        for(int i = 0; i < paths.size(); i++){
            map[paths[i][0]] = paths[i][1];
        }
        string res;
        auto e = *map.begin();
        string i = e.second;
        while(map.count(i)){
             i = map[i];
        }
        return i;
    }
};
