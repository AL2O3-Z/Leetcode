//Iterate
vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        stack<TreeNode*> s;
        while(root || !s.empty()){
            while(root){
                s.push(root);
                root = root->left;
            }
            root = s.top();
            s.pop();
            res.push_back(root->val);
            root = root->right;
        }
        return res;
    }
    //Recurisive
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        inorderTraversalHelper(root, res);
        return res;
    }
    void inorderTraversalHelper(TreeNode* root, vector<int>& res){
        if(!root) return;
        if(root->left) inorderTraversalHelper(root->left, res);
        res.push_back(root->val);
        if(root->right) inorderTraversalHelper(root->right, res);
    }
