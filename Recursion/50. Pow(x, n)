class Solution {
public:
    double myPow(double x, int n) {
        if(n == 0) return 1;
        if(n == 1) return x;
        if(n < 0){
            long nn = n;
            return 1 / power(x, -nn);
        }else{
            return power(x, n);
        }
    }
    //Iteration
    double power(double x, long n){
        double res = 1;
        while(n > 0){
            if(n & 1){
                res *= x;
            }
            x *= x;
            n = n >> 1;
        }
        return res;
    }
    //Recursion
    //double power(double x, long n){
    //    if(n == 0) return 1;
    //    if(n == 1) return x;
    //    if(n % 2 == 1){
    //        double tmp = power(x * x, n / 2);
    //        return x * tmp;
    //    }else {
    //        return power(x * x, n / 2);
    //    }
    //}
};
