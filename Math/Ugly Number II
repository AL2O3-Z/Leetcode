//The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L1, L2, and L3.
//Assume you have Uk, the kth ugly number. Then Uk+1 must be Min(L1 * 2, L2 * 3, L3 * 5).
class Solution {
public:
    int nthUglyNumber(int n) {
        if(n == 1) return 1;
        if(n <= 0) return 0;
        int k1 = 0; int k2 = 0; int k3 = 0;
        vector<int> dp(n);
        dp[0] = 1;
        for(int i = 1; i < n; i++){
            dp[i] = min(dp[k1] * 2, min(dp[k2] * 3, dp[k3] * 5));
            if(dp[i] == dp[k1] * 2) k1++;
            if(dp[i] == dp[k2] * 3) k2++;
            if(dp[i] == dp[k3] * 5) k3++;
        }
        return dp[n-1];
    }
};
