//这个题是计数，窗口内不同的元素刚好等于k，可以用reduction的思想，atmost(K) - atmost(K - 1),即可得到刚好等于k的数量，
类似的题还有正整数数组，求和刚好为k的子数组，
1248. Count Number of Nice Subarrays

class Solution {
public:
    int subarraysWithKDistinct(vector<int>& A, int K) {
        
        function<int(int)> atMost = [&A] (int k) {
            //cout<<k<<endl;
            int n = A.size();
            int res = 0;
            int arr[n + 1];
            int lastCnt = 0;
            memset(arr, 0, sizeof(arr));
            int cnt = 0; int left = 0;
            for (int i = 0; i < n; i++) {
                int cur = A[i];
                if (arr[cur]++ == 0) cnt++;
                
                while (cnt > k) {
                    int last = A[left];
                    
                    if (--arr[last] == 0) cnt--;
                    left++;
                }
                res += i - left + 1;
            }
            return res;
        };
        return atMost(K) - atMost(K - 1);
        return 0;
    }
};
