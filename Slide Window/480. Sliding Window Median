class Solution {
public:
    vector<double> medianSlidingWindow(vector<int>& nums, int k) {
        vector<double> res;
        multiset<int> s;
        int left = 0;
        for (int i = 0; i < nums.size(); i++) {
            int cur = nums[i];
            s.insert(cur);
            if (i >= k - 1) {
                if (i >= k) s.erase(s.equal_range(nums[i - k]).first);
                auto ff = next(s.begin(), (k - 1) / 2);
                int first = *ff;
                auto ss = next(ff, 1);
                int second = *ss;
                if ((k % 2) || ss == s.end()) second = first;
                cout<<i<< " "<<first << " "<<second<<endl;
                res.push_back(((double)first + (double)second) / 2);
            }
            
        }
        return res;
    }
};
