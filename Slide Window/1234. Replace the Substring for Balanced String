//这道题很特别，是寻求窗口外的元素满足某个条件，如果发现把left扔出去仍能满足外部小于等于四分之一的条件，那么为寻求最短长度，就应该扔掉left。
class Solution {
public:
    int balancedString(string s) {
        unordered_map<char,int> cnt;
        for (char c : s) cnt[c]++;
        int left = 0;
        int res = INT_MAX;
        int k = s.size() / 4;
        for (int i = 0; i < s.size(); i++) {
            char cur = s[i];
            cnt[cur]--;
            while (left < s.size() && cnt['Q'] <= k && cnt['W'] <= k && cnt['E'] <= k && cnt['R'] <= k) {
                res = min(res, i - left + 1); 
                cnt[s[left]]++;
                left++;
            }
        }
        return res;
    }
};
