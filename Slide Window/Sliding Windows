//min slide windows 就是在while内部一直符合条件，直到不符合条件后，开始向右边跑
//max slide windows 就是在while内部一直不符合条件，直到符合条件后，开始向右边跑
有两个发现，
1，这个模型就是while中一直不符合的情况，求max
a，当要求子串长度最大或者窗口宽度最大的时候，是一直加入元素，
b，直到某一刻加入这个元素后条件不再满足，再缩小左边界，使之达到符合条件，再扩展右边界

举个例子，右边一直跑，没跑一步，尾巴边长，直到有一刻，尾巴太长不能动了，右边停下，开始砍尾巴，每砍一刀，试一下是否能移动，直到再次可以移动的时候，右边再次开始跑。能否移动是触发砍尾巴的关键

2, 这个模型就是while中一直符合的情况，求min
a，当要求子串或者子数组一直不符合条件，就一直往窗口内添加元素，
b，直到某一刻符合了条件，更新结果，去掉左端元素看是否依然符合，得到就是当前窗口内符合条件的最短子串或者子数组，直到去掉左边元素后再次不符合，右边继续前进


//更新结果
当在min slide windows中，移动left收缩窗口时，窗口内的字符都是可行解，所以应该在收缩窗口的阶段进行结果的更新
当在max slide windows中，移动left收缩窗口时，在while之后才是可行解，所以应该在扩大窗口时进行结果的更新，

More Similar Sliding Window Problems
Here are some similar sliding window problems.
Also find more explanations.
If you have question about the complexity and if/while clause,
pick an easier one first.

Constrained Subsequence Sum
Number of Substrings Containing All Three Characters
Count Number of Nice Subarrays
Replace the Substring for Balanced String
Max Consecutive Ones III
Binary Subarrays With Sum
Subarrays with K Different Integers
Fruit Into Baskets
Shortest Subarray with Sum at Least K
Minimum Size Subarray Sum
