//DFS
void solve(vector<vector<char>>& board) {
        int r = board.size(); 
        if(r == 0) return;
        int c = board[0].size();
        
        for(int i = 0; i < r; i++){
            check(board, i, 0);
            check(board, i, c-1);
        }
        for(int j = 0; j < c; j++){
            check(board, 0, j);
            check(board, r-1, j);
        }
        for(int i = 0; i < r; i ++){
            for(int j = 0; j < c; j++){
                if(board[i][j] == 'O') board[i][j] = 'X';
                else if(board[i][j] == '1') board[i][j] = 'O';
            }
        }
        return;
    }
    void check(vector<vector<char>>& board, int i, int j){
        int r = board.size();
        int c = board[0].size();
        if(board[i][j] == 'O'){
            board[i][j] = '1';
            if(i > 1) check(board, i-1, j);
            if(i + 1 < r) check(board, i + 1, j);
            if(j > 1) check(board, i, j - 1);
            if(j + 1 < c) check(board,i, j + 1);
        }
    }
