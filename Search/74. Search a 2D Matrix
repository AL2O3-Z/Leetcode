n * m matrix convert to an array => matrix[x][y] => a[x * m + y]

an array convert to n * m matrix => a[x] =>matrix[x / m][x % m];
class Solution {
public:
    bool searchMatrix(vector<vector<int> > &matrix, int target) {
        int n = matrix.size();
        int m = matrix[0].size();
        int l = 0, r = m * n - 1;
        while (l != r){
            int mid = (l + r - 1) >> 1;
            if (matrix[mid / m][mid % m] < target)
                l = mid + 1;
            else 
                r = mid;
        }
        return matrix[r / m][r % m] == target;
    }
};
LOOK AT YOU !!!!
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int left = 0; 
        int up = 0;
        int down = matrix.size();
        if(down == 0) return false;
        int right = matrix[0].size(); 
        if(right == 0 ) return false;
        while(up < down) {
            int mid = up + (down - up) / 2;
            if(matrix[mid][0] < target) {
                up = mid + 1;
            } else {
                down = mid;
            }
        }
        if(up == matrix.size()) up--;
        else if(up && matrix[up][0] > target) up--;
        while(left < right) {
            int mid = left + (right - left) / 2;
            if(matrix[up][mid] == target) return true;
            else if(matrix[up][mid] > target){
                right = mid;
            }else{
                left = mid + 1;
            }
        }
        return false;
    }
};
