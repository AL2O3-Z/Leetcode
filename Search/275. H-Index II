//Time O(n)
int hIndex(vector<int>& citations) {
        int n = citations.size();
        int i;
        for(i = citations.size() - 1; i >= 0; i--){
            if(n - i > citations[i]) break;
        }
        return n - i - 1;
}
//Time O(logn) Binary Search with variant target
int hIndex(vector<int>& citations) {
        int n = citations.size();
        int l = 0; int r = n - 1;
        while(l <= r){
            int mid = l + (r - l) / 2;
            if(citations[mid] >= n - mid) r = mid - 1;
            else l = mid + 1;
        }
        return n - l;
}
About binary search : 
第一类： 需查找和目标值完全相等的数
int find(vector<int>& nums, int target) {
    int left = 0, right = nums.size();
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] == target) return mid;
        else if (nums[mid] < target) left = mid + 1;
        else right = mid;
    }
    return -1;
}

第二类： 查找第一个不小于目标值的数，可变形为查找最后一个小于目标值的数 => lower_bound
这一类可以轻松的变形为查找最后一个小于目标值的数，
我们已经找到了第一个不小于目标值的数，那么再往前退一位，返回 right - 1，就是最后一个小于目标值的数
int find(vector<int>& nums, int target) {
    int left = 0, right = nums.size();
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] < target) left = mid + 1;
        else right = mid;
    }
    return right;
}
第三类： 查找第一个大于目标值的数，可变形为查找最后一个不大于目标值的数 => upper_bound
这一类可以轻松的变形为查找最后一个不大于目标值的数
我们已经找到了第一个大于目标值的数，那么再往前退一位，返回 right - 1，就是最后一个不大于目标值的数
int find(vector<int>& nums, int target) {
    int left = 0, right = nums.size();
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] <= target) left = mid + 1;
        else right = mid;
    }
    return right;
}
第四类： 用子函数当作判断关系（通常由 mid 计算得出）
这里在二分查找法重要的比较大小的地方使用到了子函数，并不是之前三类中简单的数字大小的比较
根据给定函数 guess 的返回值情况来确定搜索的范围
Split Array Largest Sum， 
Guess Number Higher or Lower，
Find K Closest Elements，
Find K-th Smallest Pair Distance，
Kth Smallest Number in Multiplication Table，
Maximum Average Subarray II，
Minimize Max Distance to Gas Station，
Swim in Rising Water，
Koko Eating Bananas，
Nth Magical Number
第五类： 其他（通常 target 值不固定）
Find Peak Element,
H-Index II
