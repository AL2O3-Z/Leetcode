class Solution {
public:
    int maxScore(string s) {
        int n = s.size();
        vector<int> zeros(n);
        vector<int> ones(n);
        zeros[0] = (s[0] == '0'); 
        ones[s.size() - 1] = (s[s.size() - 1] == '1');
        for(int i = 1; i < s.size(); i++){
            zeros[i] = zeros[i - 1] + (s[i] == '0');
        }
        for(int i = s.size() - 2; i >= 0; i--){
            ones[i] = ones[i + 1] + (s[i] == '1');
        }
        int res = 0;
        for(int i = 0; i < s.size() - 1; i++){
            res = max(res, zeros[i] + ones[i+1]);
        }
        return res;
    }
};
//One pass
int maxScore(string s) {
        int numberOfZerosLeft = 0, numberOfOnesLeft = 0, n = s.size();
        int ans = 0;
        
        for(int i = 1; i < n-1; i++){
            if(s[i] == '0') numberOfZerosLeft++;
            else numberOfOnesLeft++;
            ans = max(ans, numberOfZerosLeft - numberOfOnesLeft);
        }
        
        ans += (s[0] == '0' ? 1 : 0);
        
        return ans + (s[n-1] == '1' ? numberOfOnesLeft+1 : numberOfOnesLeft);
}
