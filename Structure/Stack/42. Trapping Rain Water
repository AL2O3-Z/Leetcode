class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        stack<int> s;
        s.push(-1);
        vector<int> left(n, -1), right(n, n);
        for (int i = 0; i < height.size(); i++) {
            while (s.top() != -1 && height[s.top()] <= height[i]) {
                right[s.top()] = i;
                s.pop();
            }
            left[i] = s.top();
            s.push(i);
        }
        int res = 0;
        for (int i = 0; i < n; i ++) {
            if (left[i] == -1 || right[i] == n) continue;
            int h = min(height[left[i]], height[right[i]]) - height[i];
            int w = right[i] - left[i] - 1;
            res += h * w;
        }
        return res;
    }
};
