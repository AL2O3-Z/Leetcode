//通用的方法，括号问题，栈
判断是否需要被移除，需要移除开括号，就看是否有闭括号与之对应，所以做决策时是在闭括号的时候，遇到开括号默认为应该移除
遇到闭括号，有两种选择，要么栈顶有与之对应的开括号，则把开括号的位置更改为不移除并时该开括号出栈，要么栈为空，那说明该闭括号应该被移除
最后遍历位置数组，如果为0，则保留该元素，否则，应去掉它
class Solution {
public:
    string minRemoveToMakeValid(string s) {
        vector<int> left(s.size(), 0);
        stack<int> st;
        string resStr = "";
        for (int i = 0; i < s.size(); i++) {
            if (isalpha(s[i])) continue;
            if (s[i] == '(') {
                st.push(i);
                left[i] = 1;
            } else {
                if (!st.empty()) {
                    left[st.top()] = 0;
                    st.pop();
                } else {
                    left[i] = 1;
                }
            }
        }
        for (int i = 0 ; i < left.size(); i++) {
            if (left[i] == 0) resStr += s[i];
        }
        
        return resStr;
    }
};
